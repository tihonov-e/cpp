/*На цикл for
-----------
Пользователь вводит число N.
Программа раскладывает его на простые множители.

Например:  75 = 5 * 5 * 3
*/

#include <iostream>
#include <math.h>       //для sqrt

using namespace std;

//---------------------------
//тест на четность числа
//return 1 - четное
//return 0 - нечетное

int even_test ( long int n)
{
    if ((n % 2) == 0) return 1;
    else return 0;
}

//---------------------------
//тест на простоту числа
//return 1 - простое
//return 0 - составнное
int prime_test ( long int n)
{
    long int _sqrt_n = 0; // корень, округленный в большую сторону
    long int tmp1 = 0;

    if (n == 2) return 1; // 2 - единственно четное простое число
    if (even_test (n) > 0) return 0;// тест на четность числа


    //ищем корень, округленный в большую сторону
    //http://ru.wikihow.com/проверить,-является-ли-число-простым
    _sqrt_n = sqrt (n) + 1;

    //цикл по поиску сомножителей
    for (int i = 2; i < (_sqrt_n + 1); i++)
    {
        tmp1 = _sqrt_n % i;
        if (tmp1 == 0) return 1;
    }
    return 0;
}
//---------------------------
//функция разложения числа на простые множители
int analis_multiple (long int n)
{
    long int tmp1 = n;

    cout << n << " = "; // вывод начала строки

    //раскладываем на множители
    for (int i = 2; i <= tmp1; i++)
    {
        if (prime_test (i) > 0) // если множитель простой
        {
            if ( (n % i) == 0 ) // если остаток от деления равен нулю
            {
                n = n / i; // делим наше число на простой множиетель
                cout << i << " * "; // выводим множитель на экран

                if (prime_test(n) > 0) // если n после деления стало простым
                {
                    cout << n << endl; // выводим n, как последний множитель
                    return 1; // ...и выходим
                }

                i = 1; // считаем с начала
            }
        } //endif




    } //endfor
return 1;
}
//---------------------------
int main()
{
   long int n = 0;
    int prime = 0; //0- простое, 1 - составное
   cout << "n = "; cin >> n;

   //проверка на отрицательность
   if (n < 0)
   {
       cout << "Error: n < 0"<<endl;
       return 1;
    }

   prime = prime_test (n);  //проверка на простоту

   if (prime > 0) cout << n << " = " << n << " * 1" << endl; //если простое - выводим n = n * 1
   else analis_multiple (n); // иначе, раскладываем на простые множители


    return 0;
}
